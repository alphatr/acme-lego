name: Build-Release

on:
  push:
    tags: ['v*']

jobs:
  build:
    name: Build
    runs-on: ubuntu-20.04
    steps:
    - name: "Checkout"
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.15

    - name: Build
      run: |
        go mod tidy
        mkdir release
        go run build/main.go
        env GOOS=darwin GOARCH=amd64 go build -o release/lego-${GITHUB_REF##*/}-darwin-x64
        env GOOS=linux GOARCH=amd64 go build -o release/lego-${GITHUB_REF##*/}-linux-x64
        env GOOS=linux GOARCH=386 go build -o release/lego-${GITHUB_REF##*/}-linux-x86
        env GOOS=linux GOARCH=arm64 go build -o release/lego-${GITHUB_REF##*/}-linux-arm64
        env GOOS=windows GOARCH=amd64 go build -o release/lego-${GITHUB_REF##*/}-win-x64.exe
        env GOOS=windows GOARCH=386 go build -o release/lego-${GITHUB_REF##*/}-win-x86.exe

    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: release
        path: ./release

  release:
    name: Release
    needs: [build]
    runs-on: ubuntu-20.04
    steps:
    - name: "Release"
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}

    - name: "Download"
      uses: actions/download-artifact@v2
      with:
        name: release
        path: release

    - name: "Upload Assets"
      uses: alexellis/upload-assets@0.2.2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        asset_paths: '["./release/*"]'
